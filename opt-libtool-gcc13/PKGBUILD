# Contributor: Alexey Pavlov <alexpux@gmail.com>

_install_prefix="/opt${MSYSTEM_PREFIX}"

_enable_gcc_bootmode=yes

_realname='libtool'
pkgbase=opt-${_realname}-gcc13
pkgname=('opt-libtool' 'opt-libltdl')
pkgver=2.5.4
pkgrel=3
pkgdesc="A generic library support script"
arch=('i686' 'x86_64')
url="https://www.gnu.org/software/libtool"
msys2_references=(
  "cpe: cpe:/a:gnu:libtool"
)
license=('spdx:LGPL-2.0-or-later WITH Libtool-exception')
makedepends=(
  "autoconf-wrapper"
  "automake-wrapper"
  "help2man"
  "m4"
  'opt-msys2-w32api-runtime'
)
if [[ "$_enable_gcc_bootmode" != "yes" ]]; then
  makedepends=('opt-gcc')
else
  makedepends=('gcc13')
fi
source=(https://ftp.gnu.org/gnu/libtool/${_realname}-${pkgver}.tar.xz{,.sig}
        0001-cygwin-mingw-Create-UAC-manifest-files.patch
        0002-Fix-seems-to-be-moved.patch
        0003-Fix-STRICT_ANSI-vs-POSIX.patch
        0004-Allow-statically-linking-Flang-support-libraries-whe.patch
        0005-libtool-include-process.h.patch
        0006-Pass-various-flags-to-GCC.patch
        0007-msysize.patch
        0011-Pick-up-clang_rt-static-archives-compiler-internal-l.patch
        0013-Allow-statically-linking-compiler-support-libraries-.patch
        0014-Support-llvm-objdump-f-output.patch
        1001-Add-opt-prefix-in-some-places.patch)
sha256sums=('f81f5860666b0bc7d84baddefa60d1cb9fa6fceb2398cc3baca6afaa60266675'
            'SKIP'
            '67e4f2429dfe67499b1829d0a8312d9a043057db354307f8db41d9f967944346'
            'd873306936060e6c72cf0f3c174131cc85debc2ea6dc924eabdf6e3a813c768e'
            '00f0b0429431a884b481eb92f4b138c50bc17eb09f0985d7ebfd4a0a50407eb6'
            '30b361a43266dbd80c94fe58196113ad3ae78e134da62d9dfad65ac67e337db8'
            '0dd70a4f955ed4cd94a0d13b784b7db7dddbd4d1d6ee5b092202f8b9496fd3eb'
            '2cb1b61247a4632698ac7e26c496c3ad8c1b4fde080d301994dbddc0794a4bf4'
            'fca5986c0010b202ee65c69939815269bd46b3ce948d9222916985652da7e2af'
            'de68dc9387f47ee129f55b2f525a7d222374ddd8915f4f42af05f185b779b826'
            '8069e887aeeab7491f15e00547fa66d9b9e86407f5a23f37a6d8c7d165de752e'
            'e62e836f018339974f5ef7cf81bc0a4252901158eb0824eb62d0270206093ad7'
            'fb6e61afb1074ffb11351ac13829e41807ddd5b9e809ae67d2de9758a0dda4f2')
validpgpkeys=('7C5FBB96BE82B954AC20DF5F6EAC957F8EEB55C0'  # Alex Ameen <alex.ameen.tx@gmail.com>
              'FA26CA784BE188927F22B99F6570EA01146F7354') # Ileana Dumitrescu <ileanadumi95@protonmail.com>

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"; do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/${_patch}"
  done
}
# =========================================== #

prepare() {
  cd "${_realname}-${pkgver}"

  # Note: keep the patches in sync with mingw libtool
  apply_patch_with_msg \
    0001-cygwin-mingw-Create-UAC-manifest-files.patch \
    0002-Fix-seems-to-be-moved.patch \
    0003-Fix-STRICT_ANSI-vs-POSIX.patch \
    0004-Allow-statically-linking-Flang-support-libraries-whe.patch \
    0005-libtool-include-process.h.patch \
    0006-Pass-various-flags-to-GCC.patch \
    0007-msysize.patch \
    0011-Pick-up-clang_rt-static-archives-compiler-internal-l.patch \
    0013-Allow-statically-linking-compiler-support-libraries-.patch \
    0014-Support-llvm-objdump-f-output.patch \
    1001-Add-opt-prefix-in-some-places.patch

  autoconf -f
}

build() {
  cd "${_realname}-${pkgver}"

  if [[ "$_enable_gcc_bootmode" != "yes" ]]; then
    export PATH="/opt/usr/bin:$PATH"
    export CC=/opt/usr/bin/gcc.exe
    export CXX=/opt/usr/bin/g++.exe
    export LD=/opt/usr/bin/ld.exe
    export LDFLAGS+=" -L/opt/usr/lib -L/opt/usr/lib/w32api -L/opt/usr/bin"
    export AR=/opt/usr/bin/ar.exe
    export RANLIB=/opt/usr/bin/ranlib.exe
  fi

  echo ""
  echo "PATH := $PATH"
  echo "LDFLAGS := $LDFLAGS"
  echo "LD [ld] := ${LD-ld}"
  echo "CC [gcc] := ${CC-gcc}"
  echo "CXX [g++] := ${CXX-g++}"
  ${CC-gcc} --version | head -1
  echo ""

  LDFLAGS+=" -L/usr/lib -L${_install_prefix}/lib/w32api" \
  ./configure \
    --build=${CHOST/-msys/-cygwin} \
    --prefix=${_install_prefix} \
    lt_cv_sys_lib_dlsearch_path_spec="${_install_prefix}/lib /usr/lib /lib" \
    lt_cv_sys_lib_search_path_spec="${_install_prefix}/lib/gcc/x86_64-pc-cygwin/13.4.1 ${_install_prefix}/x86_64-pc-cygwin/lib ${_install_prefix}/lib /usr/lib ${_install_prefix}/lib/w32api"

  make --jobs=1 V=1
}

check() {
  cd "${_realname}-${pkgver}"

  make check -k || warning "Tests failed"
}

package_opt-libtool() {
  depends=("bash" "opt-libltdl=${pkgver}")

  cd "${_realname}-${pkgver}"

  make DESTDIR=${pkgdir} install-binSCRIPTS install-man install-info \
                         install-data-local

  rm -f ${pkgdir}${_install_prefix}/share/info/dir

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/COPYING" -t "${pkgdir}${_install_prefix}/share/licenses/${_realname}"

  sed -i 's|LD="/usr/|LD="/opt/usr/|' ${pkgdir}${_install_prefix}/bin/libtool
  sed -i 's|predep_objects="/usr/|predep_objects="/opt/usr/|' ${pkgdir}${_install_prefix}/bin/libtool
  sed -i 's|postdep_objects="/usr/|postdep_objects="/opt/usr/|' ${pkgdir}${_install_prefix}/bin/libtool
}

package_opt-libltdl() {
  pkgdesc="A system independent dlopen wrapper for GNU libtool"

  cd "${_realname}-${pkgver}"

  make DESTDIR=${pkgdir} install-libLTLIBRARIES install-includeHEADERS \
                         install-ltdlincludeHEADERS

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/libltdl/COPYING.LIB" -t "${pkgdir}${_install_prefix}/share/licenses/${_realname}"
}
