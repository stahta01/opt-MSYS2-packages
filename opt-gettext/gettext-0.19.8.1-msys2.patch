--- gettext-0.22/gettext-runtime/m4/build-to-host.m4.orig	2023-06-29 21:38:02.580298900 +0200
+++ gettext-0.22/gettext-runtime/m4/build-to-host.m4	2023-06-29 21:38:13.957674100 +0200
@@ -39,7 +39,7 @@
   gl_final_[$1]="$[$1]"
   dnl Translate it from build syntax to host syntax.
   case "$build_os" in
-    cygwin*)
+    cygwin* | msys*)
       case "$host_os" in
         mingw*)
           gl_final_[$1]=`cygpath -w "$gl_final_[$1]"` ;;
--- gettext-0.22.3/gettext-runtime/gnulib-m4/threadlib.m4.orig	2023-09-18 22:35:09.000000000 +0200
+++ gettext-0.22.3/gettext-runtime/gnulib-m4/threadlib.m4	2023-10-05 07:52:41.749068600 +0200
@@ -85,7 +85,7 @@
   AC_CACHE_CHECK([whether imported symbols can be declared weak],
     [gl_cv_have_weak],
     [case "$host_os" in
-       cygwin* | mingw* | windows*)
+       cygwin* | msys* | mingw* | windows*)
          dnl On Cygwin 3.2.0 with gcc 10.2, and likewise on mingw 10.0.0 with
          dnl gcc 11.3, the test below would succeed, but programs that use
          dnl pthread_in_use() with weak symbol references crash miserably at
@@ -458,7 +458,7 @@
          dnl Disable multithreading by default on Cygwin 1.5.x, because it has
          dnl bugs that lead to endless loops or crashes. See
          dnl <https://cygwin.com/ml/cygwin/2009-08/msg00283.html>.
-         cygwin*)
+         cygwin* | msys*)
                case `uname -r` in
                  1.[0-5].*) gl_use_threads=no ;;
                  *)         gl_use_threads=yes ;;

diff --git gettext-0.19.8.1.orig/build-aux/config.rpath gettext-0.19.8.1/build-aux/config.rpath
index 98183ff..c5d797d 100755
--- gettext-0.19.8.1.orig/build-aux/config.rpath
+++ gettext-0.19.8.1/build-aux/config.rpath
@@ -57,7 +57,7 @@ else
     aix*)
       wl='-Wl,'
       ;;
-    mingw* | cygwin* | pw32* | os2* | cegcc*)
+    mingw* | cygwin* | msys* | pw32* | os2* | cegcc*)
       ;;
     hpux9* | hpux10* | hpux11*)
       wl='-Wl,'
@@ -149,7 +149,7 @@ hardcode_direct=no
 hardcode_minus_L=no
 
 case "$host_os" in
-  cygwin* | mingw* | pw32* | cegcc*)
+  cygwin* | msys* | mingw* | pw32* | cegcc*)
     # FIXME: the MSVC++ port hasn't been tested in a loooong time
     # When not using gcc, we currently assume that we are using
     # Microsoft Visual C++.
@@ -198,7 +198,7 @@ if test "$with_gnu_ld" = yes; then
         ld_shlibs=no
       fi
       ;;
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | msys* | mingw* | pw32* | cegcc*)
       # hardcode_libdir_flag_spec is actually meaningless, as there is
       # no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
@@ -348,7 +348,7 @@ else
       ;;
     bsdi[45]*)
       ;;
-    cygwin* | mingw* | pw32* | cegcc*)
+    cygwin* | msys* | mingw* | pw32* | cegcc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -533,7 +533,7 @@ case "$host_os" in
   bsdi[45]*)
     library_names_spec='$libname$shrext'
     ;;
-  cygwin* | mingw* | pw32* | cegcc*)
+  cygwin* | msys* | mingw* | pw32* | cegcc*)
     shrext=.dll
     library_names_spec='$libname.dll.a $libname.lib'
     ;;